
Id: 1
ExeStack:
(openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguage_A6/test.in"); (readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguage_A6/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguage_A6/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguage_A6/test.in"); (readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguage_A6/test.in")
(readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguage_A6/test.in")
(readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguage_A6/test.in"); (readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguage_A6/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguage_A6/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in"); (readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in"); (readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
readFile(var_f,var_c)
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
readFile(var_f,var_c)
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(var_c)
(IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(var_c)
(IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in"); (readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in"); (readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in"); (readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in"); (readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,""C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(v=10; (newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=10
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=10
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
newStmt(a, 22)
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
newStmt(a, 22)
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) )
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) )
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 10
ExeStack:
(wh(a,30); (v=32; (print(v); print(rH(a))) ) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 10
ExeStack:
(wh(a,30); (v=32; (print(v); print(rH(a))) ) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
print(rH(a))
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 10
ExeStack:
wh(a,30)
(v=32; (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
print(rH(a))
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 10
ExeStack:
wh(a,30)
(v=32; (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
print(rH(a))
SymTable:
a --> 1
v --> 10
Heap:
1 --> 30
File Table:
Out:
10

---------------

Id: 10
ExeStack:
(v=32; (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 30
File Table:
Out:
10

---------------

Id: 1
ExeStack:
print(rH(a))
SymTable:
a --> 1
v --> 10
Heap:
1 --> 30
File Table:
Out:
10

---------------

Id: 10
ExeStack:
(v=32; (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 30
File Table:
Out:
10

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
v --> 10
Heap:
1 --> 30
File Table:
Out:
10
30

---------------

Id: 10
ExeStack:
v=32
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 30
File Table:
Out:
10
30

---------------

Id: 10
ExeStack:
v=32
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 30
File Table:
Out:
10
30

---------------

Id: 10
ExeStack:
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 32
Heap:
1 --> 30
File Table:
Out:
10
30

---------------

Id: 10
ExeStack:
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 32
Heap:
1 --> 30
File Table:
Out:
10
30

---------------

Id: 10
ExeStack:
print(v)
print(rH(a))
SymTable:
a --> 1
v --> 32
Heap:
1 --> 30
File Table:
Out:
10
30

---------------

Id: 10
ExeStack:
print(v)
print(rH(a))
SymTable:
a --> 1
v --> 32
Heap:
1 --> 30
File Table:
Out:
10
30

---------------

Id: 10
ExeStack:
print(rH(a))
SymTable:
a --> 1
v --> 32
Heap:
1 --> 30
File Table:
Out:
10
30
32

---------------

Id: 10
ExeStack:
print(rH(a))
SymTable:
a --> 1
v --> 32
Heap:
1 --> 30
File Table:
Out:
10
30
32

---------------

Id: 10
ExeStack:
SymTable:
a --> 1
v --> 32
Heap:
1 --> 30
File Table:
Out:
10
30
32
30

---------------

Id: 1
ExeStack:
(openRFile(var_f,"C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in"); (readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,"C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,"C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f+2,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
readFile(var_f+2,var_c)
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
readFile(var_f+2,var_c)
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(openRFile(var_f,"C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in"); (readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,"C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,"C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
readFile(var_f,var_c)
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
readFile(var_f,var_c)
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
print(var_c)
(IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
print(var_c)
(IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
(IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0))
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0))
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); print(var_c)) 
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); print(var_c)) 
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
readFile(var_f,var_c)
print(var_c)
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
readFile(var_f,var_c)
print(var_c)
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
print(var_c)
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 50
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
print(var_c)
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 50
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 50
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15
50

---------------

Id: 1
ExeStack:
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 50
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15
50

---------------

Id: 1
ExeStack:
SymTable:
var_f --> 1
var_c --> 50
Heap:
File Table:
Out:
15
50

---------------

Id: 1
ExeStack:
(openRFile(var_f,"C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in"); (readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,"C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,"C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
readFile(var_f,var_c)
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
readFile(var_f,var_c)
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
print(var_c)
(IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
print(var_c)
(IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
(IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0))
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0))
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); print(var_c)) 
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); print(var_c)) 
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
readFile(var_f,var_c)
print(var_c)
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
readFile(var_f,var_c)
print(var_c)
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
print(var_c)
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 50
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
print(var_c)
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 50
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15

---------------

Id: 1
ExeStack:
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 50
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15
50

---------------

Id: 1
ExeStack:
closeRFile(var_f)
SymTable:
var_f --> 1
var_c --> 50
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:
15
50

---------------

Id: 1
ExeStack:
SymTable:
var_f --> 1
var_c --> 50
Heap:
File Table:
Out:
15
50

---------------

Id: 1
ExeStack:
(openRFile(var_f,"C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in"); (readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,"C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
openRFile(var_f,"C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in")
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(readFile(var_f,var_c); (print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
readFile(var_f,var_c)
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
readFile(var_f,var_c)
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(print(var_c); (IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) ) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
print(var_c)
(IF(var_c) THEN ((readFile(var_f,var_c); print(var_c)) ) ELSE (print(0)); closeRFile(var_f)) 
SymTable:
var_f --> 1
var_c --> 15
Heap:
File Table:
1 --> C:/Users/Claudiu/IdeaProjects/ToyLanguageFX/test.in
Out:

---------------

Id: 1
ExeStack:
(v=10; (newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=10
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=10
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
newStmt(a, 22)
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
newStmt(a, 22)
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) )
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) )
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 10
ExeStack:
(wh(a,30); (v=32; (print(v); print(rH(a))) ) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
(v1=2; (v2=3; IF(v1) THEN (print(MUL(v1, v2))) ELSE (print(v1))) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v1=2
(v2=3; IF(v1) THEN (print(MUL(v1, v2))) ELSE (print(v1))) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v1=2
(v2=3; IF(v1) THEN (print(MUL(v1, v2))) ELSE (print(v1))) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(v2=3; IF(v1) THEN (print(MUL(v1, v2))) ELSE (print(v1))) 
SymTable:
v1 --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(v2=3; IF(v1) THEN (print(MUL(v1, v2))) ELSE (print(v1))) 
SymTable:
v1 --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v2=3
IF(v1) THEN (print(MUL(v1, v2))) ELSE (print(v1))
SymTable:
v1 --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v2=3
IF(v1) THEN (print(MUL(v1, v2))) ELSE (print(v1))
SymTable:
v1 --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(v1) THEN (print(MUL(v1, v2))) ELSE (print(v1))
SymTable:
v1 --> 2
v2 --> 3
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(v1) THEN (print(MUL(v1, v2))) ELSE (print(v1))
SymTable:
v1 --> 2
v2 --> 3
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(MUL(v1, v2))
SymTable:
v1 --> 2
v2 --> 3
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(MUL(v1, v2))
SymTable:
v1 --> 2
v2 --> 3
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
SymTable:
v1 --> 2
v2 --> 3
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
(v=20; (Model.WaitStmt@6ef37ce5; print(v*10)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(Model.WaitStmt@6ef37ce5; print(v*10)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(Model.WaitStmt@6ef37ce5; print(v*10)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(Model.WaitStmt@6ef37ce5; print(v*10)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(Model.WaitStmt@6ef37ce5; print(v*10)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@6ef37ce5
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@6ef37ce5
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@7c082ea3
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@7c082ea3
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@2baa32d2
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@2baa32d2
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@46225ee4
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@46225ee4
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@28f1a57c
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@28f1a57c
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@1531fbf7
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@1531fbf7
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@6ff76721
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@6ff76721
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@3bf6d145
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@3bf6d145
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@1e094902
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@1e094902
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@47de777
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@47de777
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@50e756b6
print(1)
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Model.WaitStmt@50e756b6
print(1)
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(1)
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(1)
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9
10

---------------

Id: 1
ExeStack:
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9
10

---------------

Id: 1
ExeStack:
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9
10
200

---------------

Id: 1
ExeStack:
(v=20; (Wait(10) ; print(v*10)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(Wait(10) ; print(v*10)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(Wait(10) ; print(v*10)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(Wait(10) ; print(v*10)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(Wait(10) ; print(v*10)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(10) 
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(10) 
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(9) 
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(9) 
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(8) 
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(8) 
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(7) 
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(7) 
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(6) 
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(6) 
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(5) 
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(5) 
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(4) 
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(4) 
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(3) 
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(3) 
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(2) 
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(2) 
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(1) 
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(1) 
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(0) 
print(1)
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(0) 
print(1)
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(1)
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(1)
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9
10

---------------

Id: 1
ExeStack:
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9
10

---------------

Id: 1
ExeStack:
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9
10
200

---------------

Id: 1
ExeStack:
(v=20; (Wait(10) ; print(v*10)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(Wait(10) ; print(v*10)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(Wait(10) ; print(v*10)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(Wait(10) ; print(v*10)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(Wait(10) ; print(v*10)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(10) 
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(10) 
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(9) 
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(9) 
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(8) 
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(8) 
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(7) 
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(7) 
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(6) 
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(6) 
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(5) 
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(5) 
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(4) 
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(4) 
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(3) 
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(3) 
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(2) 
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(2) 
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(1) 
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(1) 
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(0) 
print(1)
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
Wait(0) 
print(1)
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(1)
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(1)
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(2)
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(3)
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
print(4)
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
print(5)
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
print(6)
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
print(7)
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
print(8)
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
print(9)
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
print(10)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9
10

---------------

Id: 1
ExeStack:
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9
10

---------------

Id: 1
ExeStack:
SymTable:
v --> 20
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9
10
200

---------------

Id: 1
ExeStack:
(v=10; (newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=10
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=10
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
newStmt(a, 22)
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
newStmt(a, 22)
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) )
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) )
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 10
ExeStack:
(wh(a,30); (v=32; (print(v); print(rH(a))) ) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 10
ExeStack:
(wh(a,30); (v=32; (print(v); print(rH(a))) ) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
print(rH(a))
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 10
ExeStack:
wh(a,30)
(v=32; (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
print(rH(a))
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 10
ExeStack:
wh(a,30)
(v=32; (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
print(rH(a))
SymTable:
a --> 1
v --> 10
Heap:
1 --> 30
File Table:
Out:
10

---------------

Id: 10
ExeStack:
(v=32; (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 30
File Table:
Out:
10

---------------

Id: 1
ExeStack:
print(rH(a))
SymTable:
a --> 1
v --> 10
Heap:
1 --> 30
File Table:
Out:
10

---------------

Id: 10
ExeStack:
(v=32; (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 30
File Table:
Out:
10

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
v --> 10
Heap:
1 --> 30
File Table:
Out:
10
30

---------------

Id: 10
ExeStack:
v=32
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 30
File Table:
Out:
10
30

---------------

Id: 10
ExeStack:
v=32
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 30
File Table:
Out:
10
30

---------------

Id: 10
ExeStack:
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 32
Heap:
1 --> 30
File Table:
Out:
10
30

---------------

Id: 10
ExeStack:
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 32
Heap:
1 --> 30
File Table:
Out:
10
30

---------------

Id: 10
ExeStack:
print(v)
print(rH(a))
SymTable:
a --> 1
v --> 32
Heap:
1 --> 30
File Table:
Out:
10
30

---------------

Id: 10
ExeStack:
print(v)
print(rH(a))
SymTable:
a --> 1
v --> 32
Heap:
1 --> 30
File Table:
Out:
10
30

---------------

Id: 10
ExeStack:
print(rH(a))
SymTable:
a --> 1
v --> 32
Heap:
1 --> 30
File Table:
Out:
10
30
32

---------------

Id: 10
ExeStack:
print(rH(a))
SymTable:
a --> 1
v --> 32
Heap:
1 --> 30
File Table:
Out:
10
30
32

---------------

Id: 10
ExeStack:
SymTable:
a --> 1
v --> 32
Heap:
1 --> 30
File Table:
Out:
10
30
32
30

---------------

Id: 1
ExeStack:
(v=0; (for(0; 5; v+1); print(v)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=0
(for(0; 5; v+1); print(v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=0
(for(0; 5; v+1); print(v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(0; 5; v+1); print(v)) 
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(0; 5; v+1); print(v)) 
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(0; 5; v+1)
print(v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(0; 5; v+1)
print(v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(v=0; (for(0; 5; v+1); print(v)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=0
(for(0; 5; v+1); print(v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=0
(for(0; 5; v+1); print(v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(0; 5; v+1); print(v)) 
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(0; 5; v+1); print(v)) 
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(0; 5; v+1)
print(v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(0; 5; v+1)
print(v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(v=20; (for(0; 3; v*1); print(v*10)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(for(0; 3; v*1); print(v*10)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(for(0; 3; v*1); print(v*10)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(0; 3; v*1); print(v*10)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(0; 3; v*1); print(v*10)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(0; 3; v*1)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(0; 3; v*1)
print(v*10)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(v=20; (for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}
print(10*v)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}
print(10*v)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1
2

---------------

Id: 1
ExeStack:
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1
2

---------------

Id: 1
ExeStack:
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2
30

---------------

Id: 10
ExeStack:
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2
30

---------------

Id: 1
ExeStack:
(v=0; for(v=1; comp(v<10); v=v+1) {
print(v)
}) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=0
for(v=1; comp(v<10); v=v+1) {
print(v)
}
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=0
for(v=1; comp(v<10); v=v+1) {
print(v)
}
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=1; comp(v<10); v=v+1) {
print(v)
}
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=1; comp(v<10); v=v+1) {
print(v)
}
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 10
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 10
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
SymTable:
v --> 10
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
(v=20; (for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}
print(10*v)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}
print(10*v)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(v=2; print(v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=2
print(v)
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=2
print(v)
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
SymTable:
v --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
SymTable:
v --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
SymTable:
v --> 2
Heap:
File Table:
Out:
2

---------------

Id: 1
ExeStack:
(v=0; for(v=1; comp(v<10); v=v+1) {
print(v)
}) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=0
for(v=1; comp(v<10); v=v+1) {
print(v)
}
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=0
for(v=1; comp(v<10); v=v+1) {
print(v)
}
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=1; comp(v<10); v=v+1) {
print(v)
}
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=1; comp(v<10); v=v+1) {
print(v)
}
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
(v=20; (for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}
print(10*v)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}
print(10*v)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1
2

---------------

Id: 1
ExeStack:
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1
2

---------------

Id: 1
ExeStack:
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2
30

---------------

Id: 10
ExeStack:
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2
30

---------------

Id: 1
ExeStack:
print(comp(10+2<2))
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
SymTable:
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
(a=2+3*5; (b=a+1; print(b)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=2+3*5
(b=a+1; print(b)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=2+3*5
(b=a+1; print(b)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=a+1; print(b)) 
SymTable:
a --> 17
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=a+1; print(b)) 
SymTable:
a --> 17
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=a+1
print(b)
SymTable:
a --> 17
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=a+1
print(b)
SymTable:
a --> 17
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(b)
SymTable:
a --> 17
b --> 18
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(b)
SymTable:
a --> 17
b --> 18
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
SymTable:
a --> 17
b --> 18
Heap:
File Table:
Out:
18

---------------

Id: 1
ExeStack:
(a=10+comp(2<6); print(a)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=10+comp(2<6)
print(a)
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=10+comp(2<6)
print(a)
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
SymTable:
a --> 11
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
SymTable:
a --> 11
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
SymTable:
a --> 11
Heap:
File Table:
Out:
11

---------------

Id: 1
ExeStack:
(a=2-2; (IF(a) THEN (v=2) ELSE (v=3); print(v)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=2-2
(IF(a) THEN (v=2) ELSE (v=3); print(v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=2-2
(IF(a) THEN (v=2) ELSE (v=3); print(v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(IF(a) THEN (v=2) ELSE (v=3); print(v)) 
SymTable:
a --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(IF(a) THEN (v=2) ELSE (v=3); print(v)) 
SymTable:
a --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(a) THEN (v=2) ELSE (v=3)
print(v)
SymTable:
a --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(a) THEN (v=2) ELSE (v=3)
print(v)
SymTable:
a --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=3
print(v)
SymTable:
a --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=3
print(v)
SymTable:
a --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
SymTable:
a --> 0
v --> 3
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
SymTable:
a --> 0
v --> 3
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
SymTable:
a --> 0
v --> 3
Heap:
File Table:
Out:
3

---------------

Id: 1
ExeStack:
(v=6; ( (while (comp(v-4>0)) (print(v); v=v-1) ); print(v)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=6
( (while (comp(v-4>0)) (print(v); v=v-1) ); print(v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=6
( (while (comp(v-4>0)) (print(v); v=v-1) ); print(v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
( (while (comp(v-4>0)) (print(v); v=v-1) ); print(v)) 
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
( (while (comp(v-4>0)) (print(v); v=v-1) ); print(v)) 
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); v=v-1) 
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); v=v-1) 
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
v=v-1
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
v=v-1
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=v-1
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
v=v-1
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 5
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 5
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
(print(v); v=v-1) 
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 5
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
(print(v); v=v-1) 
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 5
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
print(v)
v=v-1
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 5
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
(v=20; (for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}
print(10*v)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}
print(10*v)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1
2

---------------

Id: 1
ExeStack:
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1
2

---------------

Id: 1
ExeStack:
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2
30

---------------

Id: 10
ExeStack:
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2
30

---------------

Id: 1
ExeStack:
(v=0; for(v=1; comp(v<10); v=v+1) {
print(v)
}) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=0
for(v=1; comp(v<10); v=v+1) {
print(v)
}
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=0
for(v=1; comp(v<10); v=v+1) {
print(v)
}
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=1; comp(v<10); v=v+1) {
print(v)
}
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=1; comp(v<10); v=v+1) {
print(v)
}
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 1
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 2
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 3
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 4
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 5
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 6
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 7
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 8
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
(print(v); v=v+1) 
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
print(v)
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 9
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 10
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
 (while (comp(v<10)) (print(v); v=v+1) )
SymTable:
v --> 10
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
SymTable:
v --> 10
Heap:
File Table:
Out:
1
2
3
4
5
6
7
8
9

---------------

Id: 1
ExeStack:
(v=20; (for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=20
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}; print(10*v)) 
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}
print(10*v)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
for(v=0; comp(v<3); v=v+1) {
fork((print(v); v=v+1) )
}
print(10*v)
SymTable:
v --> 20
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 0
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
(fork((print(v); v=v+1) ); v=v+1) 
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 1
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
fork((print(v); v=v+1) )
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
v=v+1
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
(print(v); v=v+1) 
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
 (while (comp(v<3)) (fork((print(v); v=v+1) ); v=v+1) )
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1

---------------

Id: 10
ExeStack:
print(v)
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1

---------------

Id: 1
ExeStack:
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1
2

---------------

Id: 1
ExeStack:
print(10*v)
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2

---------------

Id: 10
ExeStack:
v=v+1
SymTable:
v --> 2
Heap:
File Table:
Out:
0
1
2

---------------

Id: 1
ExeStack:
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2
30

---------------

Id: 10
ExeStack:
SymTable:
v --> 3
Heap:
File Table:
Out:
0
1
2
30

---------------

Id: 1
ExeStack:
(v=6; ( (while (comp(v-4>0)) (print(v); v=v-1) ); print(v)) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=6
( (while (comp(v-4>0)) (print(v); v=v-1) ); print(v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=6
( (while (comp(v-4>0)) (print(v); v=v-1) ); print(v)) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
( (while (comp(v-4>0)) (print(v); v=v-1) ); print(v)) 
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
( (while (comp(v-4>0)) (print(v); v=v-1) ); print(v)) 
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); v=v-1) 
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); v=v-1) 
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
v=v-1
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(v)
v=v-1
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=v-1
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
v=v-1
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 6
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 5
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 5
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
(print(v); v=v-1) 
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 5
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
(print(v); v=v-1) 
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 5
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
print(v)
v=v-1
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 5
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
print(v)
v=v-1
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 5
Heap:
File Table:
Out:
6

---------------

Id: 1
ExeStack:
v=v-1
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 5
Heap:
File Table:
Out:
6
5

---------------

Id: 1
ExeStack:
v=v-1
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 5
Heap:
File Table:
Out:
6
5

---------------

Id: 1
ExeStack:
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 4
Heap:
File Table:
Out:
6
5

---------------

Id: 1
ExeStack:
 (while (comp(v-4>0)) (print(v); v=v-1) )
print(v)
SymTable:
v --> 4
Heap:
File Table:
Out:
6
5

---------------

Id: 1
ExeStack:
print(v)
SymTable:
v --> 4
Heap:
File Table:
Out:
6
5

---------------

Id: 1
ExeStack:
print(v)
SymTable:
v --> 4
Heap:
File Table:
Out:
6
5

---------------

Id: 1
ExeStack:
SymTable:
v --> 4
Heap:
File Table:
Out:
6
5
4

---------------

Id: 1
ExeStack:
(v=10; (newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=10
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
v=10
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(newStmt(a, 22); (fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
newStmt(a, 22)
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
newStmt(a, 22)
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
v --> 10
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
(fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) ); (print(v); print(rH(a))) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) )
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
fork((wh(a,30); (v=32; (print(v); print(rH(a))) ) ) )
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(v); print(rH(a))) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 10
ExeStack:
(wh(a,30); (v=32; (print(v); print(rH(a))) ) ) 
SymTable:
a --> 1
v --> 10
Heap:
1 --> 22
File Table:
Out:

---------------

Id: 1
ExeStack:
(a=1; (b=2; c=5) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; c=5) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; c=5) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; c=5) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; c=5) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
c=5
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
c=5
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(a=1; (b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10=b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10=10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10=b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10=10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(a=1; (b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(100); print(200)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(100); print(200)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(100)
print(200)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(100)
print(200)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(200)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
100

---------------

Id: 1
ExeStack:
print(200)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
100

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
100
200

---------------

Id: 1
ExeStack:
(a=1; (b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10=b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10=10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10=b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10=10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(a=1; (b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(b)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(b)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
(a=1; (b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2
300

---------------

Id: 1
ExeStack:
(a=1; (b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2
300

---------------

Id: 1
ExeStack:
(a=1; (b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2
300

---------------

Id: 1
ExeStack:
(a=1; (b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2
300

---------------

Id: 1
ExeStack:
(a=1; (b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2
300

---------------

Id: 1
ExeStack:
(a=1; (b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2
300

---------------

Id: 1
ExeStack:
(a=1; (b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2
300

---------------

Id: 1
ExeStack:
(a=1; (b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2
300

---------------

Id: 1
ExeStack:
(a=1; (b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
a=1
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(b=2; (c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
b=2
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(c=5; (switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) ) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
c=5
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));; print(300)) 
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
switch(a*10)
(case (b*c) (print(a); print(b)) )
(case (10) (print(100); print(200)) )
(default print(300));
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
IF(comp(a*10==b*c)) THEN ((print(a); print(b)) ) ELSE (IF(comp(a*10==10)) THEN ((print(100); print(200)) ) ELSE (print(300)))
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
(print(a); print(b)) 
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(a)
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(b)
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
print(300)
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2

---------------

Id: 1
ExeStack:
SymTable:
a --> 1
b --> 2
c --> 5
Heap:
File Table:
Out:
1
2
300

---------------
